syntax = "proto3";

package bst.v1;

import "area.proto";
import "location.proto";

option go_package = "github.com/tsuyoyo/bst-pj-proto/gen/go/bst/v1;bstv1";

service StudioService {
  // POST /studios
  rpc CreateStudio(CreateStudioRequest) returns (CreateStudioResponse);
  // GET /studios
  rpc ListStudios(ListStudiosRequest) returns (ListStudiosResponse);
  // GET /studios/{id}
  rpc GetStudio(GetStudioRequest) returns (GetStudioResponse);
  // PUT /studios/{id}
  rpc UpdateStudio(UpdateStudioRequest) returns (UpdateStudioResponse);
  // DELETE /studios/{id}
  rpc DeleteStudio(DeleteStudioRequest) returns (DeleteStudioResponse);
  // POST /studios/{id}/reviews
  rpc CreateStudioReview(CreateStudioReviewRequest)
      returns (CreateStudioReviewResponse);
  // GET /studios/{id}/reviews
  rpc ListStudioReviews(ListStudioReviewsRequest)
      returns (ListStudioReviewsResponse);
  // DELETE /studios/{id}/reviews/{reviewId}
  rpc DeleteStudioReview(DeleteStudioReviewRequest)
      returns (DeleteStudioReviewResponse);
}

message CreateStudioRequest {
  string   name        = 1;
  string   description = 2;
  Location location    = 3;
}

message CreateStudioResponse {
  Studio studio = 1;
}

message ListStudiosRequest {
  int32 page_size  = 1;
  int32 page_token = 2;
  Area  area       = 3;
}

message ListStudiosResponse {
  repeated Studio studios         = 1;
  string          next_page_token = 2;
  int32           total_size      = 3;
}

message GetStudioRequest {
  int32 studio_id = 1;
}

message GetStudioResponse {
  Studio studio = 1;
}

message UpdateStudioRequest {
  int32             studio_id   = 1;
  optional string   name        = 2;
  optional string   description = 3;
  optional Location location    = 4;
}

message UpdateStudioResponse {
  Studio studio = 1;
}

message DeleteStudioRequest {
  int32 studio_id = 1;
}

message DeleteStudioResponse {
  bool success = 1;
}

message CreateStudioReviewRequest {
  int32  studio_id = 1;
  string comment   = 2;
}

message CreateStudioReviewResponse {
  StudioReview review = 1;
}

message ListStudioReviewsRequest {
  int32 studio_id  = 1;
  int32 page_size  = 2;
  int32 page_token = 3;
}

message ListStudioReviewsResponse {
  repeated StudioReview reviews         = 1;
  string                next_page_token = 2;
  int32                 total_size      = 3;
}

message DeleteStudioReviewRequest {
  int32 studio_id = 1;
  int32 review_id = 2;
}

message DeleteStudioReviewResponse {
  bool success = 1;
}
