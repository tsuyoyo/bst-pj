syntax = "proto3";

package bst.v1;

import "bst/v1/content.proto";
import "bst/v1/party.proto";
import "bst/v1/user.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/tsuyoyo/bst-pj-proto/gen/go/bst/v1;bstv1";

enum SessionStatus {
  SESSION_STATUS_UNSPECIFIED  = 0;
  SESSION_STATUS_BEFORE_ENTRY = 1;
  SESSION_STATUS_ENTRY_OPEN   = 2;
  SESSION_STATUS_ENTRY_CLOSE  = 3;
  SESSION_STATUS_APPROACHING  = 4;
  SESSION_STATUS_ONGOING      = 5;
  SESSION_STATUS_COMPLETED    = 6;
  SESSION_STATUS_CANCELLED    = 7;
}

// Session model
message Session {
  int32                     id               = 1;
  string                    title            = 2;
  google.protobuf.Timestamp created_at       = 3;
  google.protobuf.Timestamp entry_open       = 4;
  google.protobuf.Timestamp entry_close      = 5;
  google.protobuf.Timestamp event_date       = 6;
  SessionStatus             status           = 7;
  int32                     participants_num = 8;
}

message SessionDetail {
  Session                     session      = 1;
  string                      description  = 2;
  repeated SessionPart        parts        = 3;
  repeated SessionParticipant participants = 4;
}

message SessionPart {
  Part   part          = 1;  // Instruments, Vocals, etc.
  string name          = 2;  // Part name in the session (e.g. "Gt1", "Gt2")
  int32  display_order = 3;  // Display order in the session
  int32  max_entry     = 4;  // Max number of entries user can make
}

message SessionTask {
  string name = 1;
}

// Participant model
enum SessionParticipantStatus {
  SESSION_PARTICIPANT_STATUS_UNSPECIFIED = 0;
  SESSION_PARTICIPANT_STATUS_CONFIRMED   = 1;
  SESSION_PARTICIPANT_STATUS_CANCELLED   = 2;
}

message SessionParticipant {
  int32                    id              = 1;
  User                     user            = 2;
  repeated SessionPart     parts           = 3;
  int32                    primary_part_id = 4;
  SessionParticipantStatus status          = 5;
  bool                     is_admin        = 6;
  bool                     is_player       = 7;
}

message SessionSongEntry {
  int32       id      = 1;
  User        user    = 2;
  SessionPart part    = 3;
  string      comment = 4;
}

message SessionSongPart {
  SessionPart part        = 1;
  bool        is_required = 2;  // Is required to play the song
}

message SessionSong {
  Song                      song    = 1;
  repeated SessionSongEntry entries = 2;
  repeated SessionSongPart  parts   = 3;
}

message TimetableEntry {
  enum TimetableEntryType {
    TIMETABLE_ENTRY_TYPE_UNSPECIFIED = 0;
    TIMETABLE_ENTRY_TYPE_TASK        = 1;
    TIMETABLE_ENTRY_TYPE_PERFORMANCE = 2;
    TIMETABLE_ENTRY_TYPE_PARTY       = 3;
  }
  TimetableEntryType type  = 1;
  int32              index = 2;  // Index of the entry in the entities array
  google.protobuf.Timestamp start = 3;
  google.protobuf.Timestamp end   = 4;
}

message Timetable {
  repeated TimetableEntry entries = 1;

  // Entities of each timetable entry
  repeated SessionTask tasks         = 2;  // For TimetableEntryType.TASK
  repeated SessionSong session_songs = 3;  // For TimetableEntryType.PERFORMANCE
  repeated Party       parties       = 4;  // For TimetableEntryType.PARTY
}

message SessionFeedback {
  int32                     score      = 1;
  string                    comment    = 2;
  User                      user       = 3;
  google.protobuf.Timestamp created_at = 4;
}
